
akka {
	
	remote.netty.hostname = "master"
	
	actor {
		provider = "akka.remote.RemoteActorRefProvider"
	}
	
	event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
	loglevel = DEBUG
	log-config-on-start = off
	actor {
		debug{
			receive = on
			autoreceive = on
			lifecycle = on
			fsm = on
			event-stream = on
		}
	}
	remote {
		log-sent-message = on
		log-receive-message = on
	}
	
	
	thread-pool-executor {
        # Keep alive time for threads
        keep-alive-time = 60s
 
        # Min number of threads to cap factor-based core number to
        core-pool-size-min = 8
 
        # No of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 3.0
 
        # Max number of threads to cap factor-based number to
        core-pool-size-max = 128
 
        # Hint: max-pool-size is only used for bounded task queues
        # minimum number of threads to cap factor-based max number to
        max-pool-size-min = 8
 
        # Max no of threads ... ceil(available processors * factor)
        max-pool-size-factor  = 3.0
 
        # Max number of threads to cap factor-based max number to
        max-pool-size-max = 128
 
        # Specifies the bounded capacity of the task queue (< 1 == unbounded)
        task-queue-size = -1
 
        # Specifies which type of task queue will be used, can be "array" or
        # "linked" (default)
        task-queue-type = "linked"
 
        # Allow core threads to time out
        allow-core-timeout = on
      }
}
