<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mas.codehaus.finder.dao.UserDao">
	<resultMap id="userMap" type="User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="avatar" property="avatar" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
		<result column="register_time" property="registerTime"
			jdbcType="TIMESTAMP" />
		<result column="user_token" property="userToken" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, password, email, nickname, avatar, sex, cellphone,
		register_time, user_token
	</sql>
	<!-- 注册用户 -->
	<insert id="register" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		insert into user (id, name, password,
		email, nickname,
		avatar,
		sex, cellphone, register_time,
		user_token)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER}, #{cellphone,jdbcType=VARCHAR},
		#{registerTime,jdbcType=TIMESTAMP},
		#{userToken,jdbcType=VARCHAR})
	</insert>

	<!-- 删除用户 -->
	<delete id="delete" parameterType="int">
		delete from user where
		id=#{id}
	</delete>

	<!-- 修改用户 -->
	<update id="update" parameterType="User">
		update user
		set name =
		#{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		nickname =
		#{nickname,jdbcType=VARCHAR},
		avatar = #{avatar,jdbcType=VARCHAR},
		sex =
		#{sex,jdbcType=INTEGER},
		cellphone = #{cellphone,jdbcType=VARCHAR},
		register_time = #{registerTime,jdbcType=TIMESTAMP},
		user_token =
		#{userToken,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- <select id="getUserInfoByUserId" parameterType="int" resultMap="userMap"> 
		select u.id,u.name, u.password, u.email, u.nickname, u.avatar, u.sex, u.cellphone, 
		u.register_time, u.user_token, i.id as info_id, i.content from user u, info 
		i where u.id = i.user_id and u.id = #{id} </select> -->
	<!-- <select id="getUserByUserId" parameterType="int" resultMap="userMap"> 
		select u.id, u.name, u.password, u.email, u.nickname, u.avatar, u.sex, u.cellphone, 
		u.register_time, u.user_token from user u where u.id = #{id} </select> -->
	<select id="getUserByUserName" parameterType="string"
		resultType="int">
		select count(u.name) from user u where u.name = #{name}
	</select>

	<select id="findUserByUserName" parameterType="string"
		resultType="User">
		select <include refid="Base_Column_List" />
		from user where name = #{name}
	</select>

</mapper>